1. ให้นักศึกษาส่ง github link ปฏิบัติการที่ 1 ในกลุ่มไลน์ของรายวิชา โดยหัวหน้ารวบรวมเป็นไฟล์ xls (รหัสนักศึกษา, ชื่อ-สกุล, link)
650112418065 วรุตม์ สำรวมจิต https://github.com/wxrutz/4134901-68
 
2. ให้นักศึกษาเลือกระบบ Automation/Integration Platform as a Service (iPaaS) หรือ Low-code Platform อื่นๆ มา 1 ตัว และเปรียบเทียบข้อดีข้อเสียกับ n8n โดยเน้นที่การใช้งานแบบ Local
 n8n กับ Zapier 
    ข้อดีของ n8n (แบบ Local Use):
        ปลอดภัยกว่าเพราะข้อมูลไม่ออกไปนอกองค์กร
        ปรับแต่งได้ลึก เขียน Script ได้
        เหมาะกับการใช้งานแบบ Developer/Technical Team
        ไม่มีข้อจำกัดด้าน Task หรือจำนวน Workflow

    ข้อเสียของ n8n (แบบ Local Use):
        ต้องมีความรู้ทางเทคนิคเพื่อ Setup และ Maintain
        อาจต้องดูแล Hosting หรือ Container เอง
        UI อาจดูซับซ้อนสำหรับผู้เริ่มต้น

    ข้อดีของ Zapier (Cloud):
        เริ่มใช้งานง่ายมาก ไม่ต้องติดตั้ง
        เหมาะสำหรับ Non-technical user
        เชื่อมแอปยอดนิยมได้มากมาย

    ข้อเสียของ Zapier (เมื่อเทียบกับการใช้งานแบบ Local):
        ไม่สามารถทำงานในระบบ Intranet ได้
        จำกัดฟีเจอร์ในแผนฟรี
        ขาดความยืดหยุ่นสำหรับงานที่ต้องการการเขียนโค้ดหรือ logic ที่ซับซ้อน

3. ให้นักศึกษาเปรียบเทียบการใช้งาน n8n แบบ Local และ Cloud และการติดตั้งแบบ Local แบบ node.js และ Docker เหมาะสมกับสถานะการณ์ใด
    การใช้งาน n8n แบบ Local และ Cloud มีความแตกต่างกันในด้านการควบคุม ความปลอดภัย และความสะดวกในการติดตั้ง 
โดย n8n แบบ Local เหมาะสำหรับองค์กรที่ต้องการควบคุมข้อมูลภายใน เช่น ระบบงานในโรงเรียน หน่วยงานราชการ หรือองค์กรที่มีข้อมูลสำคัญ 
เพราะสามารถรันภายในเครือข่าย (Intranet) และป้องกันการส่งข้อมูลออกนอกระบบได้ ส่วน n8n แบบ Cloud (n8n.cloud) 
เหมาะกับผู้เริ่มต้นหรือองค์กรขนาดเล็กที่ต้องการความสะดวกในการใช้งานโดยไม่ต้องดูแลโครงสร้างพื้นฐานเอง แม้จะมีค่าบริการรายเดือน 
แต่ลดภาระด้านการติดตั้งและบำรุงรักษาได้มาก
    สำหรับการติดตั้งแบบ Local หากต้องการ ความยืดหยุ่นในการปรับแต่งโค้ดหรือทดสอบพัฒนา แบบละเอียด ใช้ Node.js จะเหมาะสม
เพราะสามารถเข้าไปจัดการไฟล์ได้โดยตรง แต่เหมาะกับผู้ที่มีพื้นฐานด้านการเขียนโปรแกรม ส่วน การติดตั้งแบบ Docker 
เหมาะสำหรับกรณีที่ต้องการติดตั้งเร็ว จัดการง่าย หรือรันในเครื่องเซิร์ฟเวอร์/Cloud Server ที่รองรับ Docker โดยไม่ต้องยุ่งกับการตั้งค่าระบบมาก 
เหมาะกับการใช้งานในองค์กรที่ต้องการความเสถียรและสะดวกในการอัปเกรดหรือย้ายระบบ

4. ให้นักศึกษาอธิบายหน้าที่ของ Node แต่ละประเภทของ n8n พร้อมยกตัวอย่าง ประเภทละ 3 ตัวอย่าง ​
    1.) Trigger Node
    หน้าที่ เป็นจุดเริ่มต้นของ Workflow ใช้รอเหตุการณ์หรือการกระทำบางอย่าง เช่น การรับ Webhook, ตั้งเวลา, หรือรับข้อมูลจากแอปอื่น
    ตัวอย่าง
    Webhook – รับข้อมูลจากระบบภายนอกเมื่อมีการเรียก URL
    Cron – ตั้งเวลาทำงานอัตโนมัติตามช่วงเวลาที่กำหนด
    Email Trigger – เริ่มทำงานเมื่อมีอีเมลเข้า (IMAP)

    2.) Regular Node (Action Node / Functional Node)
    หน้าที่ ประมวลผลข้อมูล เช่น ดึงข้อมูล แปลงข้อมูล ส่งข้อมูลต่อ หรือเชื่อมต่อกับ API
    ตัวอย่าง
    HTTP Request – เรียก API จากภายนอก เช่น ดึงข้อมูลจาก REST API
    Set – กำหนดค่าหรือสร้างข้อมูลใหม่ไว้ใช้งานต่อ
    Function – เขียน JavaScript เพื่อปรับแต่งหรือประมวลผลข้อมูล

    3.) Service Integration Node (App Node)
    หน้าที่ เชื่อมต่อกับบริการหรือแอปพลิเคชันยอดนิยม เช่น Google, Slack, Trello, LINE เป็นต้น
    ตัวอย่าง
    Google Sheets – อ่าน/เขียนข้อมูลใน Google Sheets
    Telegram – ส่งข้อความหรือรับข้อความจากผู้ใช้ Telegram
    Slack – ส่งแจ้งเตือนไปยังช่อง Slack ของทีม

5. ให้นักศึกษายกตัวอย่างการใช้งาน n8n จริง (พร้อมอ้างอิงแหล่ง/ที่มา) มา 3 กรณี พร้อมอธิบายว่า n8n ช่วยแก้ปัญหาใดในแต่ละกรณี​
    1. กรณี Delivery Hero: การปรับปรุงการดำเนินงานด้าน IT
    การใช้งาน Delivery Hero ใช้ n8n สร้าง workflow เพื่อทำให้การดำเนินงานด้าน IT เป็นไปโดยอัตโนมัติ
    ซึ่งช่วยประหยัดเวลาได้ถึง 200 ชั่วโมงต่อเดือน

    ปัญหาที่แก้ไข 
    - การตรวจสอบระบบและการอัปเดตที่ต้องทำด้วยมือ
    - การใช้เวลาในการปฏิบัติงานด้าน IT ที่ซ้ำซาก
    - การขาดประสิทธิภาพในการจัดการระบบหลายระบบ

    วิธีการแก้ไข n8n ช่วยทำให้การตรวจสอบระบบ การส่งการแจ้งเตือน และการอัปเดตต่างๆ เป็นไปโดยอัตโนมัติ 
    ลดภาระงานของทีม IT และเพิ่มความน่าเชื่อถือของระบบ

    อ้างอิง Groove Technology. (2025). Exploring N8n Use Cases: Your Ultimate Guide To Smarter Automation In 2025. 
    https://groovetechnology.com/blog/software-development/exploring-n8n-use-cases-your-ultimate-guide-to-smarter-automation-in-2025/

    2. กรณี Stepstone: การจัดการ workflow หลายระบบ
    การใช้งาน Stepstone ใช้ n8n ในการดำเนินงาน workflow ที่สำคัญกว่า 200 รายการ และสามารถสร้าง workflow ได้เร็วกว่าเดิมอย่างมาก

    ปัญหาที่แก้ไข
    - การเชื่อมต่อระหว่างระบบต่างๆ ที่ใช้เวลานาน
    - การจัดการ workflow จำนวนมากที่ซับซ้อน
    - ความล่าช้าในการพัฒนาและปรับใช้ระบบใหม่

    วิธีการแก้ไข n8n ช่วยให้ Stepstone สามารถสร้างและจัดการ integration ระหว่างระบบต่างๆ ได้อย่างรวดเร็ว 
    ทำให้การเชื่อมต่อข้อมูลและการทำงานร่วมกันของระบบมีประสิทธิภาพมากขึ้น
    อ้างอิง Groove Technology. (2025). Exploring N8n Use Cases: Your Ultimate Guide To Smarter Automation In 2025.
    https://groovetechnology.com/blog/software-development/exploring-n8n-use-cases-your-ultimate-guide-to-smarter-automation-in-2025/

    3. กรณีการจัดการ Lead และ CRM แบบอัตโนมัติ
    การใช้งาน n8n workflow ที่เริ่มจากการส่งฟอร์ม Typeform จากนั้นเพิ่มข้อมูลด้วย Clearbit เพิ่มข้อมูลลงใน Salesforce
    และส่งการแจ้งเตือนไปยังทีมผ่าน Microsoft Teams

    ปัญหาที่แก้ไข
    - การป้อนข้อมูล lead ด้วยมือที่ใช้เวลานานและเสี่ยงผิดพลาด
    - การขาดความต่อเนื่องในการติดตาม lead ใหม่
    - การประสานงานระหว่างทีมที่ไม่ทันท่วงที
    วิธีการแก้ไข n8n ช่วยสร้างกระบวนการที่ไหลลื่นตั้งแต่มีลูกค้าเป้าหมายใหม่เข้ามา โดยจัดการข้อมูล เพิ่มรายละเอียด 
    และแจ้งเตือนทีมโดยอัตโนมัติ ทำให้ pipeline การขายมีประสิทธิภาพและแม่นยำมากขึ้น
    อ้างอิง Groove Technology. (2025). Exploring N8n Use Cases: Your Ultimate Guide To Smarter Automation In 2025. https://groovetechnology.com/blog/software-development/exploring-n8n-use-cases-your-ultimate-guide-to-smarter-automation-in-2025/


